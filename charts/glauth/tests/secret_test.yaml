# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Secret

templates:
  - secret.yaml

tests:
  - it: Should fail for unknown provider
    set:
      database.provider: mysql
    asserts:
      - failedTemplate:
          errorMessage: >-
            Invalid database provider: mysql. .Values.database.provider must be
            'sqlite' or 'postgres'.

  - it: Should fail for invalid connection string for SQLite
    set:
      database.provider: sqlite
      database.connectionString: file:/data.db
    asserts:
      - failedTemplate:
          errorMessage: >-
            Invalid database connectionString: file:/data.db.
            .Values.database.connectionString must start with 'file:data/glauth.db'
            when .Values.database.provider is 'sqlite'.

  - it: Should fail for invalid connection string for PostgreSQL
    set:
      database.provider: postgres
      database.connectionString: postgresql://user:password@netloc:5432/postgres
    asserts:
      - failedTemplate:
          errorMessage: >-
            Invalid database connectionString: postgresql://user:password@netloc:5432/postgres.
            .Values.database.connectionString must start with 'postgres://'
            when .Values.database.provider is 'postgres'.

  - it: Should not create Secret
    set:
      secret.create: false
    asserts:
      - hasDocuments:
          count: 0

  - it: Should create Secret with defaults
    set: {}
    asserts:
      - isKind:
          of: Secret
      - isSubset:
          path: stringData
          content:
            DB_CONNECTION_STRING: file:data/glauth.db?_journal_mode=WAL&_busy_timeout=2500&_txlock=immediate

  - it: Should create secret for SQLite
    set:
      database.provider: sqlite
      database.connectionString: file:data/glauth.db
    asserts:
      - isKind:
          of: Secret
      - isSubset:
          path: stringData
          content:
            DB_CONNECTION_STRING: file:data/glauth.db
      - isNotSubset:
          path: stringData
          content:
            MAXMIND_LICENSE_KEY: {}

  - it: Should create Secret for PostgreSQL
    set:
      database.provider: postgres
      database.connectionString: postgres://user:password@netloc:5432/postgres
    asserts:
      - isKind:
          of: Secret
      - isSubset:
          path: stringData
          content:
            DB_CONNECTION_STRING: postgres://user:password@netloc:5432/postgres
      - isNotSubset:
          path: stringData
          content:
            MAXMIND_LICENSE_KEY: {}

  - it: Should create Secret for SQLite
    set:
      database.provider: sqlite
      database.connectionString: file:data/glauth.db
      maxmindLicenseKey: XXXXXXXXXXXXX
    asserts:
      - isKind:
          of: Secret
      - isSubset:
          path: stringData
          content:
            DB_CONNECTION_STRING: file:data/glauth.db
            MAXMIND_LICENSE_KEY: XXXXXXXXXXXXX
