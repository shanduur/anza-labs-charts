# -- Number of replicas for the stateful set.
replicaCount: 1

updateStrategy:
  # -- The deployment strategy to use to replace existing pods with new ones. Options: "RollingUpdate" or "OnDelete".
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 100%
    partition: 0

glauth:
  image:
    # -- Registry and repository for the glauth image.
    repository: ghcr.io/glauth/glauth-plugins
    # -- Tag for the image.
    tag: "v2.4.0"
    # -- Image pull policy.
    pullPolicy: IfNotPresent

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

config:
  api: {} # TODO
  # [api]
  #   enabled = true
  #   internals = true # debug application performance
  #   tls = false # enable TLS for production!!
  #   listen = "0.0.0.0:5555"
  #   cert = "cert.pem"
  #   key = "key.pem"

  security: {} # TODO
  # yubikeyclientid = "yubi-api-clientid"
  # yubikeysecret = "yubi-api-secret"
  #
  # [behaviors]
  #   LimitFailedBinds = true
  #   NumberOfFailedBinds = 3
  #   PeriodOfFailedBinds = 10
  #   BlockFailedBindsFor = 60
  #   PruneSourceTableEvery = 600
  #   PruneSourcesOlderThan = 600

  backends:
    - # -- Backend for reading config from a file.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: file

      # -- Enable/disable default file backend.
      enabled: false

      # -- Inline content of the configuration file for the `file` backend in TOML format.
      # This is usually a set of users, groups, and settings. If empty, no content is loaded.
      # Example:
      # content: |
      #   [[users]]
      #     name = "someuser"
      #     password = "plaintext-or-hashed"
      #     uidnumber = 5001
      #     primarygroup = 5501
      #
      #   [[groups]]
      #     name = "somegroup"
      #     gidnumber = 5501
      content: ""

    - # -- Backend for reading config from a S3 bucket.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: s3

      # -- Enable/disable default S3 backend.
      enabled: false

    - # -- Backend for reading config from an OwnCloud.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: owncloud

      # -- Enable/disable default OwnCloud backend.
      enabled: false

    - # -- Backend for reading config from a ldap.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: ldap

      # -- Enable/disable default S3 backend.
      enabled: false

    - # -- Backend for reading config from a MySQL/MariaDB database.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: mysql

      # -- Enable/disable default MySQL backend.
      enabled: false

    - # -- Backend for reading config from a PostgreSQL database.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: postgresql

      # -- Enable/disable default PostgreSQL backend.
      enabled: false

    - # -- Backend for reading config from an embedded SQLite database.
      # Persistence and backup options are only supported for `type: sqlite`.
      # Valid backend types: file, s3, owncloud, ldap, mysql, postgresql, sqlite
      type: sqlite

      # -- Enable/disable default SQLite backend.
      enabled: true

      persistence:
        # -- Enable/disable PVC creation for data.
        enabled: false
        # -- Use an existing PVC if defined, otherwise create one.
        existingClaim: ""
        # -- Specify the StorageClass (if required).
        storageClass: ""
        # -- Access mode for the PVC.
        accessMode: ReadWriteOnce
        # -- Storage size for the PVC.
        size: 10Gi
        # -- Annotations applied to PVC.
        annotations: {}

      backup:
        image:
          # -- Registry and repository for the litestream image.
          repository: docker.io/litestream/litestream
          # -- Tag for the image.
          tag: "0.3.13"
          # -- Image pull policy.
          pullPolicy: IfNotPresent

        resources: {}
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
          #   cpu: 100m
          #   memory: 128Mi

        securityContext: {}
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1000

        logging:
          # -- Logging level. Options: DEBUG, INFO, WARNING, ERROR
          level: "INFO"
          # -- Logging format. Options: text or json
          type: "text"
          # -- Whether to log to stderr (default is stdout)
          stderr: false

        # -- Interval for monitoring in Go duration format (e.g. "30s"). If empty, default is used.
        monitorInterval: 1s
        # -- Interval between checkpoints in Go duration format. If empty, default is used.
        checkpointInterval: 1m
        # -- Busy timeout, if empty, default is used.
        busyTimeout: 1s
        # -- Minimum number of pages to trigger a checkpoint.
        minCheckpointPageCount: 1000
        # -- Maximum number of pages processed during a checkpoint.
        maxCheckpointPageCount: 10000

        secret:
          # -- Specifies whether a secret should be created.
          create: true
          # -- Specifies name of a secret used to configure the glauth.
          # If not filled, uses full name.
          name: ""

          # -- Primary S3 access key.
          accessKey: ""
          # -- Primary S3 secret key.
          secretKey: ""

          replicas: []
            # - accessKey: ""
            #   secretKey: ""
            #   region: ""
            #   bucket: ""
            #   path: ""
            #   endpoint: ""
            #   forcePathStyle: false
            #   skipVerify: false

# -- Secrets for pulling images.
imagePullSecrets: []
# -- Override for the name.
nameOverride: ""
# -- Override for the full name.
fullnameOverride: ""

service:
  # -- Service type.
  type: ClusterIP

  # TODO: ports

serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Automatically mount a ServiceAccount's API credentials.
  automount: true
  # -- Annotations to add to the service account.
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

# -- Annotations to be added to the pods.
podAnnotations: {}
# -- Labels to be added to the pods.
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# -- Node selector for the pods.
nodeSelector: {}

# -- Tolerations for the pods.
tolerations: []

# -- Affinity settings for the pods.
affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: kubernetes.io/arch
  #           operator: In
  #           values:
  #             - amd64
  #             - arm64
  #         - key: kubernetes.io/os
  #           operator: In
  #           values:
  #             - linux
